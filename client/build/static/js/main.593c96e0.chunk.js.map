{"version":3,"sources":["constants/actionTypes.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.jsx","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.jsx","components/Form/styles.js","components/Form/Form.jsx","images/memories.png","styles.js","App.jsx","reducers/posts.js","reducers/index.js","index.jsx"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE_POST","URL","updatePost","id","updatedPost","axios","patch","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","post","setCurrentId","dispatch","useDispatch","classes","useStyle","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","a","data","type","payload","console","log","likeCount","delete","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","emptyFieldValidation","trim","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","api","newPost","createPost","alert","TextField","required","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","mobContainer","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.593c96e0.chunk.js","sourcesContent":["export const FETCH_ALL = 'FETCH_ALL'\nexport const CREATE = 'CREATE'\nexport const UPDATE = 'UPDATE'\nexport const DELETE = 'DELETE'\nexport const LIKE_POST = 'LIKE_POST'","import axios from 'axios'\n\nconst URL = 'https://old-memories-app.herokuapp.com/posts'\n\nexport const fetchPosts = () => axios.get(URL)\nexport const createPost = (newPost) => axios.post(URL, newPost)\nexport const updatePost = (id, updatedPost) => axios.patch(`${URL}/${id}`, updatedPost)\nexport const deletePost = (id) => axios.delete(`${URL}/${id}`)\nexport const likePost = (id) => axios.patch(`${URL}/${id}/likePost`)","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n    },\n    border: {\n        border: 'solid',\n    },\n    fullHeightCard: {\n        height: '100%',\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n    },\n    overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n    },\n    grid: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n});","import React from \"react\";\nimport useStyle from './styles'\n\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\n\nimport { useDispatch } from 'react-redux'\nimport { deletePost, likePost } from '../../../actions/posts'\n\n\nconst Post = ({ post, setCurrentId }) => {\n    const dispatch = useDispatch()\n    const classes = useStyle()\n    // console.log(post)\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} \n            image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button\n                    style={{ color: 'white' }}\n                    size=\"small\"\n                    onClick={() => setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"default\" /></Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            </div>\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize=\"small\" /> Delete</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post","import {\n    CREATE,\n    FETCH_ALL,\n    DELETE,\n    UPDATE,\n    LIKE_POST\n} from '../constants/actionTypes'\nimport * as api from '../api'\n\n// Action Creators\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const { data } = await api.fetchPosts()\n        dispatch({\n            type: FETCH_ALL,\n            payload: data\n        })\n    } catch (error) {\n        console.log('ERROR [action/posts.js/getPosts] => ', error.message)\n    }\n}\n\nexport const createPost = (post) => async(dispatch) => {\n    try {\n        // console.log('post at action => ', post)\n        const { data } = await api.createPost(post)\n            // console.log('data => ', data)\n        dispatch({\n            type: CREATE,\n            payload: data\n        })\n    } catch (error) {\n        console.log('ERROR [action/posts.js/createPost] => ', error.message)\n    }\n}\n\nexport const updatePost = (id, post) => async(dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        dispatch({\n            type: UPDATE,\n            payload: data\n        })\n    } catch (error) {\n        console.log('ERROR [action/posts.js/updatePost] => ', error.message)\n    }\n}\n\nexport const deletePost = (_id) => async(dispatch) => {\n    try {\n        // console.log(_id)\n        await api.deletePost(_id)\n        dispatch({\n            type: DELETE,\n            payload: { _id }\n        })\n    } catch (error) {\n        console.log('ERROR [action/posts.js/deletePost] => ', error)\n    }\n}\n\nexport const likePost = (_id) => async(dispatch) => {\n    try {\n        const { data } = await api.likePost(_id)\n        dispatch({\n            type: LIKE_POST,\n            payload: data\n        })\n    } catch (error) {\n        console.log('ERROR [action/posts.js/likePost] => ', error)\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    smMargin: {\n        margin: theme.spacing(1),\n    },\n    actionDiv: {\n        textAlign: 'center',\n    },\n}));","import { CircularProgress, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from 'react-redux'\n\nimport Post from './Post/Post'\nimport useStyle from './styles'\n\n\nconst Posts = ({ setCurrentId }) => {\n    const classes = useStyle()\n    const posts = useSelector((state) => state.posts)\n    // console.log(posts)\n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={6} md={6}>\n                        <Post post={post} setCurrentId={setCurrentId} />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    )\n}\n\nexport default Posts","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n}));","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyle from './styles'\n\nimport { createPost, updatePost } from '../../actions/posts'\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const classes = useStyle()\n    const dispatch = useDispatch()\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\n\n    const [postData, setPostData] = useState({\n        creator: '', title: '', message: '', tags: [],\n        selectedFile: ' '\n    })\n\n    useEffect(() => {\n        if (post) setPostData(post)\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (emptyFieldValidation()) {\n\n            if (currentId) dispatch(updatePost(currentId, postData))\n            else dispatch(createPost(postData))\n            clear()\n\n        } else alert('Please fill all the fields.')\n    }\n\n    const emptyFieldValidation = () => {\n        // return TRUE if all field are filled.\n\n        console.log(postData.creator.trim() !== '',\n            postData.title.trim() !== '',\n            postData.message.trim() !== '',\n            postData.tags.length !== 0,\n            postData.selectedFile)\n\n        return (postData.creator.trim() !== '' &&\n            postData.title.trim() !== '' &&\n            postData.message.trim() !== '' &&\n            postData.tags.length !== 0 &&\n            postData.selectedFile.trim() !== '')\n\n    }\n\n    const clear = () => {\n        setCurrentId(null)\n        setPostData({\n            creator: '', title: '', message: '', tags: [],\n            selectedFile: ''\n        })\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography\n                    variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField\n                    required={true}\n                    id=\"standard-required\"\n                    name=\"creator\"\n                    variant=\"outlined\"\n                    label=\"Creator\"\n                    fullWidth value={postData.creator}\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n                />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} required />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} required />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>{currentId ? 'Update' : 'Submit'}</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    heading: {\n        color: 'rgba(0,183,255, 1)',\n    },\n    image: {\n        marginLeft: '15px',\n    },\n    [theme.breakpoints.down('sm')]: {\n        mobContainer: {\n            flexDirection: 'column-reverse'\n        }\n    },\n}));","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core'\nimport { getPosts } from './actions/posts'\n\nimport Posts from './components/Posts/Posts'\nimport Form from './components/Form/Form'\nimport memories from './images/memories.png'\nimport useStyle from './styles'\n\nfunction App() {\n  const [currentId, setCurrentId] = useState(null)\n  const classes = useStyle()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getPosts())\n  }, [dispatch])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h3\" align=\"center\">Memories</Typography>\n        <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container className={classes.mobContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n}\n\nexport default App;\n","import {\n    CREATE,\n    FETCH_ALL,\n    DELETE,\n    UPDATE,\n    LIKE_POST\n} from '../constants/actionTypes'\n\nconst posts = (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload\n        case CREATE:\n            return [...posts, action.payload]\n        case UPDATE:\n        case LIKE_POST:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload._id)\n        default:\n            return posts\n    }\n}\n\nexport default posts","import { combineReducers } from \"redux\";\nimport posts from './posts'\n\nexport default combineReducers({\n    posts,\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}